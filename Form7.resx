<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        VfN5ngbaAAAAAElFTkSuQmCC
</value>
  </data>
</root>